String.prototype.trim = function () { return (this || "").replace(/^(\s|\u00A0)+|(\s|\u00A0)+$/g, "") }; String.prototype.format = function () { if (arguments.length == 0) return null; var a = Array.prototype.slice.call(arguments, 0); return this.replace(/\{(\d+)\}/g, function (c, b) { return a[b] }) }; String.prototype.toDate = function (b) { if (b == null) b = "yyyy-MM-dd hh:mm:ss"; var c = { "y+": "y", "M+": "M", "d+": "d", "h+": "h", "m+": "m", "s+": "s" }, a = { y: "", M: "", d: "", h: "00", m: "00", s: "00" }, d = b; for (var e in c) if (new RegExp("(" + e + ")").test(b)) a[c[e]] = this.substring(d.indexOf(RegExp.$1), d.indexOf(RegExp.$1) + RegExp.$1.length); return new Date(a.y, a.M - 1, a.d, a.h, a.m, a.s) }; Date.prototype.format = function (a) { var c = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), S: this.getMilliseconds() }; if (/(y+)/.test(a)) a = a.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)); for (var b in c) if (new RegExp("(" + b + ")").test(a)) a = a.replace(RegExp.$1, RegExp.$1.length == 1 ? c[b] : ("00" + c[b]).substr(("" + c[b]).length)); return a }; Date.prototype.toText = function (a) { if (a == null) a = "yyyy-MM-dd hh:mm"; var c = { "y+": "y", "M+": "M", "o+": "o", "d+": "d", "D+": "D", "h+": "h", "H+": "H", "m+": "m", "i+": "i", "s+": "s", "S+": "S" }, e = { y: this.getFullYear(), M: this.getMonth() < 9 ? "0" + (1 + this.getMonth()) : 1 + this.getMonth(), o: 1 + this.getMonth(), d: this.getDate() < 10 ? "0" + this.getDate() : this.getDate(), D: this.getDate(), h: this.getHours() < 10 ? "0" + this.getHours() : this.getHours(), H: this.getHours(), m: this.getMinutes() < 10 ? "0" + this.getMinutes() : this.getMinutes(), i: this.getMinutes(), s: this.getSeconds() < 10 ? "0" + this.getSeconds() : this.getSeconds(), S: this.getSeconds() }, b = a; for (var d in c) if (new RegExp("(" + d + ")").test(a)) b = b.replace(RegExp.$1, e[c[d]]); return b }; Array.prototype.contains = function (b) { for (var a = 0; a < this.length; a++) if (this[a] == b) return true; return false }; Array.prototype.equals = function (a) { return this.sort().toString() == a.sort().toString() }; Array.prototype.del = function (b) { for (var a = 0; a < this.length; a++) if (this[a] == b) { this.splice(a, 1); break } }; var Global = { Cookies: { "get": function (a) { var b = document.cookie.indexOf(a + "="), d = b + a.length + 1; if (!b && a != document.cookie.substring(0, a.length)) return null; if (b == -1) return null; var c = document.cookie.indexOf(";", d); if (c == -1) c = document.cookie.length; return unescape(document.cookie.substring(d, c)) }, "set": function (h, g, a, d, c, f) { var b = new Date; b.setTime(b.getTime()); if (a) a = a * 1e3 * 60 * 60 * 24; var e = new Date(b.getTime() + a); document.cookie = h + "=" + escape(g) + (a ? ";expires=" + e.toGMTString() : "") + (d ? ";path=" + d : "") + (c ? ";domain=" + c : "") + (f ? ";secure" : "") }, del: function (b, c, a) { if (getCookie(b)) document.cookie = b + "=" + (c ? ";path=" + c : "") + (a ? ";domain=" + a : "") + ";expires=Thu, 01-Jan-1970 00:00:01 GMT" }, imageCode: function () { return this.get("LKExamImageCode") } }, Exception: { throwNew: function (a) { alert(a) }, nullOrEmpty: function (a) { this.throwNew(a + "值为：Null或空字符串") }, negative: function () { } }, Guid: { random: function () { return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1) }, "get": function () { return this.random() + this.random() + "-" + this.random() + "-" + this.random() + "-" + this.random() + "-" + this.random() + this.random() + this.random() }, empty: function () { return "00000000-0000-0000-0000-000000000000" } }, CallBack: { normal_3: function (d, a, c, b) { d({ result: a === true, info: c, target: b || null }) }, normal_2: function (c, a, b) { this.normal_3(c, a, b, null) }, normal_1: function (c, a, b) { this.normal_3(c, a.result, a.info, b) }, normal_0: function (b, a) { this.normal_3(b, a.result, a.info, null) }, true_3: function (c, b, a) { this.normal_3(c, true, b, a) }, true_2: function (b, a) { this.normal_3(b, true, null, a) }, true_1: function (b, a) { this.normal_3(b, true, a, null) }, true_0: function (a) { this.normal_3(a, true, null, null) }, false_3: function (c, b, a) { this.normal_3(c, false, b, a) }, false_2: function (b, a) { this.normal_3(b, false, null, a) }, false_1: function (b, a) { this.normal_3(b, false, a, null) }, false_0: function (a) { this.normal_3(a, false, null, null) } }, URL: { arg: function () { var a = window.location.search, e = a.indexOf("?"), d = {}; if (e != -1) for (var f = a.substring(e + 1, a.length).split("&"), b, c = 0; c < f.length; c++) { b = f[c].split("="); d[b[0]] = b[1] } return d }, rtype: function () { var b = this.arg(), a = b.rtype; if (typeof a != "undefined") try { return parseInt(a) || 0 } catch (c) { } return 0 }, js: function (i) { for (var e = {}, f = new RegExp(i + "(\\?(.*))?$", "i"), g = document.getElementsByTagName("script"), b = 0; b < g.length; b++) { var c = g[b]; if (c.src && c.src.match(f)) { var h = c.src.match(f)[2]; if (h && (t = h.match(/([^&=]+)=([^=&]+)/g))) for (var d = 0; d < t.length; d++) { r = t[d]; var a = r.match(/([^&=]+)=([^=&]+)/); if (a) e[a[1]] = a[2] } } } return e }, Iframe: { srcData: {}, collect: function (b) { try { this.srcData = {}; var c = b.element, f = c ? b.innerStyle : "", a = $("<div></div>").css({ display: "block" }).attr("style", f).append(c || "<br />"), e = a.find("iframe"), d = this; e.each(function (a) { if (!this.src) d.srcData[a] = "about:blank"; else d.srcData[a] = this.src; $(this).css("float", "left").removeAttr("src").attr({ collectIndex: a }) }); return a } catch (g) { } finally { a = null } }, release: function (c) { var a, b = this; $(c).find("iframe").each(function () { a = parseInt($(this).attr("collectIndex")); b.srcData[a] && $(this).attr("src", b.srcData[a]); $(this).removeAttr("collectIndex") }); this.srcData = {} } }, routes: function () { var d = location.pathname.replace(/\//, ""), b = d.split("/"), c = b.length, a = { controller: "", action: "", urlParameter: "" }; if (c == 1) a.action = b[0]; else if (c == 2) { a.controller = b[0]; a.action = b[1] } else if (c == 3) { a.controller = b[0]; a.action = b[1]; a.urlParameter = b[2] } return a } }, Environment: { ListXX: { examineeName: "学生", examinerName: "教师", examineeNumber: "学号", examinerNumber: "工号", departmentName: "班级" }, ListQY: { examineeName: "员工", examinerName: "主管", examineeNumber: "工号", examinerNumber: "编号", departmentName: "部门" }, isXX: 0, init: function () { if (this.isXX == 0) this.isXX = Global.URL.js("Global.js").hj_XX == "True"; return this.isXX }, "get": function (b) { this.init(); var a = this.isXX ? this.ListXX : this.ListQY; return a[b] || "未指定的环境名称" }, get考生名称: function () { return this.get("examineeName") }, get考生编号: function () { return this.get("examineeNumber") }, get考官名称: function () { return this.get("examinerName") }, get考官编号: function () { return this.get("examinerNumber") }, get部门名称: function () { return this.get("departmentName") }, get角色名称: function (a) { switch (a) { case 0: return this.get考生名称(); case 1: return this.get考官名称(); default: return "" } }, get角色编号: function (a) { switch (a) { case 0: return this.get考生编号(); case 1: return this.get考官编号(); default: return "" } } }, Extension: { fileUpload: function (a) { var b = document.all ? true : false, d = b && navigator.userAgent.indexOf("MSIE 7.0") != -1, e = b && navigator.userAgent.indexOf("MSIE 8.0") != -1; if (d || e) { a.select(); var c = document.selection.createRange().text; document.selection.empty(); return c } else return a.value }, ext: function (a) { var b = RegExp(".[^.]+$").exec(a) || {}; return Global.String.lowerCase(b[0] || "") }, isImage: function (b, c) { var a = this.ext(b); if (a != ".jpg" && a != ".jpeg" && a != ".bmp" && a != ".gif" && a != ".png") Global.CallBack.false_1(c, "图片格式不正确，请上传jpg,jpeg,bmp,gif格式的图片"); else Global.CallBack.true_1(c, b) }, isExcel: function (a, c) { var b = this.ext(a); if (b != ".xls" && b != ".xlsx") Global.CallBack.false_1(c, "Excel文件格式不正确，请上传xls,xlsx格式的文件"); else Global.CallBack.true_1(c, a) } }, String: { trim: function (a) { if (typeof a == "string") return a.trim(); else Global.Exception.throwNew(a + "不是字符串，无法删除左右两端的空格！") }, isNullOrEmpty: function (a) { return a == null || typeof a == "undefined" || typeof a == "string" && a.trim() == "" ? true : false }, isUndefined: function (a) { return typeof a == "undefined" }, chsEnLen: function (c) { for (var a = 0, d = c.length, b = 0; b < d; b++) if (c.charCodeAt(b) > 255) a += 2; else a++; return a }, lowerCase: function (a) { if (!this.isNullOrEmpty(a)) a = a.toLowerCase(); return a }, upperCase: function (a) { if (!this.isNullOrEmpty(a)) a = a.toUpperCase(); return a }, sub: function (a, b, c) { return typeof a == "string" ? a.Substring(b, c) : a } }, Number: {}, Format: { email: function (b, f, e, a, c) { a = $(a); var g = /^(13[0-9]|15[0-9]|18[0-9])\d{8}$/; if (!e && b == "") Global.CallBack.false_3(c, "请输入手机号码！", a); else if (b != "" && !g.test(b)) Global.CallBack.false_3(c, "手机号码格式不正确！", a); else if (b.length > 11) Global.CallBack.false_3(c, "手机号码长度不能大于11位字符！", a); else if (b == f) Global.CallBack.false_3(c, "您还没有修改过手机号码！", a); else { Global.CallBack.true_1(c, b); return } var h = a.attr("tagName"), d = a.attr("type"); h == "INPUT" && (d == "text" || d == "password") && a.focus() } }, Object: { clone: function (a) { var b; if (a instanceof Array) { b = []; var c = a.length; while (c--) b[c] = this.clone(a[c]); return b } else if (a instanceof Function) return a; else if (a instanceof Object) { b = {}; for (var d in a) b[d] = this.clone(a[d]); return b } else return a }, getType: function (a) { var c = Object.prototype.toString, b = { undefined: "undefined", number: "number", "boolean": "boolean", string: "string", "[object Function]": "function", "[object RegExp]": "regexp", "[object Array]": "array", "[object Date]": "date", "[object Error]": "error" }; return b[typeof a] || b[c.call(a)] || (a ? "object" : "null") }, isType: function (b, a) { return a == this.getType(b) }, isObject: function (a) { return this.isType(a, "object") }, isArray: function (a) { return this.isType(a, "array") }, isFunction: function (a) { return this.isType(a, "function") }, isBoolean: function (a) { return this.isType(a, "boolean") }, isRegExp: function (a) { return this.isType(a, "regexp") }, isDate: function (a) { return this.isType(a, "date") }, isError: function (a) { return this.isType(a, "error") }, isString: function (a) { return this.isType(a, "string") }, isNumber: function (a) { return this.isType(a, "number") }, isNull: function (a) { return this.isType(a, "null") }, isUndefined: function (a) { return this.isType(a, "undefined") }, htmlElemFocus: function (a) { $(a).focus() }, htmlElemBlur: function (a) { $(a).blur() }, Tag: { disabled: function (a) { $(a).attr({ disabled: "disabled" }) }, enabled: function (a) { $(a).removeAttr("disabled") }, onClick: function (a) { a = $(a); !a.attr("disabled") && a.click() }, onSelect: function (a) { $(a).select() }, onFocus: function (a) { $(a).focus() }, inputFE: function (a) { a = $(a); a.val() == "" && a.focus() }, inputFS: function (a) { a = $(a); if (a.val() != "") a.select(); else a.focus() } } }, Position: { enumType: { relative: "relative", absolute: "absolute" }, "get": function (a, c) { a = $(a); var b = c ? a.position() : a.offset(); return { top: b.top, left: b.left} }, relative: function (a) { return this.get(a, true) }, absolute: function (a) { return this.get(a, false) } }, HTML: { addClass: function (a, c) { a = a || {}; var b; b = a["class"] || ""; b = (c || "") + " " + b; a["class"] = Global.String.trim(b); return a }, addAttributes: function (a, c, b) { a = a || {}; Global.String.isNullOrEmpty(c) && Global.Exception.nullOrEmpty("HtmlAttributes的附加Key属性"); Global.String.isNullOrEmpty(b) && Global.Exception.nullOrEmpty("HtmlAttributes的附加Value值"); a[c] = b; return a }, getAttributes: function (a, b) { a = a || {}; return a[b] }, tagNormal: function (a, b, c) { a = Global.String.lowerCase(a); switch (a) { case "input": return "<input" + (c ? " {htmlattributes}" : "") + ' value="' + b + '" />'; break; default: return "<" + a + (c ? " {htmlattributes}" : "") + ">" + (b == null || b == undefined ? "" : b) + "</" + a + ">" } }, tagNormal_0: function (b, a) { return this.tagNormal(b, a, false) }, tagBuilder: function (h, g, a, f) { var b = this.tagNormal(h, g, true), e = "", c; a = a || {}; for (var d in a) { c = typeof a[d]; if (c == "string" || c == "number") e += d + '="' + a[d] + '" ' } b = b.replace("{htmlattributes}", e); return f ? $(b)[0] : b }, iframe_0: function (a) { this.addAttributes(a, "frameborder", "0"); this.addAttributes(a, "scrolling", "no"); Global.String.isNullOrEmpty(this.getAttributes(a, "src")) && Global.Exception.nullOrEmpty("IFrame标签HtmlAttributes属性集合Src属性"); return this.tagBuilder("iframe", null, a, false) }, iframe_1: function (b, a) { this.addAttributes(a, "src", b); return this.iframe_0(a) }, iframe_2: function (c, b, a) { return this.iframe_3(c, null, b, a) }, iframe_3: function (d, a, b, c) { c = c || {}; if (Global.String.isNullOrEmpty(a)) a = ""; else a = "/" + a + "/"; if (b) b = "/" + b; else b = ""; if (Global.String.isNullOrEmpty(d)) Global.Exception.nullOrEmpty("IFrame标签的Src之ActionName"); else this.addAttributes(c, "src", a + d + b); return this.iframe_0(c) }, div: function (b, a) { return this.tagBuilder("div", b, a, false) }, divElem: function (b, a) { return this.tagBuilder("div", b, a, true) }, a: function (b, a) { return this.tagBuilder("a", b, a, false) }, b: function (b, a) { return this.tagBuilder("b", b, a, false) }, highlight: function (b, a) { a = this.addAttributes(a, "style", "font-size:15px;color:green"); return this.tagBuilder("b", b, a, false) }, span: function (b, a) { return this.tagBuilder("span", b, a, false) }, input: function (b, a) { a = a || {}; a.type = a.type || "text"; return this.tagBuilder("input", b, a, false) }, dl: function (b, a) { return this.tagBuilder("dl", b, a, false) }, dt: function (a, b) { return a ? this.tagBuilder("dt", a, b, false) : "" }, dd: function (a, b) { return a ? this.tagBuilder("dd", a, b, false) : "" }, btn: function (b, h, a) { var c = ""; b = Global.String.lowerCase(b); switch (b) { case "btn1": case "btn2": c = "bgFFF" } a = this.addClass(a, b); var f = a.onclick || function () { }, d = this.input(h || "Button", { type: "button", onclick: f }); delete a.onclick; var e = this.span(d, { "class": c ? c : "" }), g = this.span(e, a); return g }, btn1: function (b, a) { return this.btn("btn1", b, a) }, btn2: function (b, a) { return this.btn("btn2", b, a) }, ImageCode: { "set": function (c, b) { var a = document.getElementById(c); if (a) { a.onload = function () { this.style.display = "inline" }; a.src = "/Shared/ImageCode/1?rnd=" + Math.random(); b && $(a).prev("input[type=text]").select() } }, init: function (a) { this.set(a, false) }, reload: function (a) { this.set(a, true) } } }, LoadIng: { ready: function (a) { $(function () { a && a() }) } }, AccessKey: { Bind: { type: function (a, b) { $(document).unbind(a).bind(a, function (a) { b && b(a) }) }, keydown: function (a) { this.type("keydown", a) } }, Event: { keySingle: function (b, a) { switch (b.keyCode) { case 13: a && a() } }, keyCombination: function () { } }, KeyDown: { enter: function (a) { Global.AccessKey.Bind.keydown(function (b) { Global.AccessKey.Event.keySingle(b, a) }) } } }, MsgBox: { MsgBoxData: {}, init: function (a) { this.MsgBoxData[a] = this.MsgBoxData[a] || new MsgBox(null, { isTipMsg: true, bgColor: "#fff", innerStyle: "padding:5px 10px 10px 10px;" }) }, "get": function (a) { typeof this.MsgBoxData[a] == "undefined" && this.init(a); return this.MsgBoxData[a] }, show: function (a, b) { this.position(a, b); this.bgColor(a, b.replaceBg || false); this.get(a).show() }, hide: function (a) { this.get(a).hide() }, Hide: { one: function (a) { Global.MsgBox.get(a).hide() }, all: function () { var a = Global.MsgBox.MsgBoxData || {}; for (var c in a) { var b = a[c]; Global.Object.isFunction(b.hide) && b.hide() } } }, bgColor: function (b, a) { this.get(b).setBgColor(a ? "#ffffcd" : "#fff") }, cont: function (b, a) { this.get(b).setContent(a, null) }, position: function (f, e) { var b = e.currentElem, c = parseInt(b.attr("mbleft") || 0), d = parseInt(b.attr("mbtop") || 0), a = Global.Position.absolute(b); if (Global.Object.isNumber(c) && c != 0) a.left += c; else a.left += 250; if (Global.Object.isNumber(d) && d != 0) a.top += d; else a.top += -2; this.get(f).setElemAnimate(a) }, checking: function (d, f, e, h) { for (var g = 0, d = d || [], a, c = d.length, b = 0; b < c; b++) { a = d[b]; Global.Object.isFunction(f[a]) && f[a](function (d) { if (d.result) { Global.MsgBox.hide(a); if (!Global.Object.isUndefined(e[a]) && !Global.Object.isUndefined(d.info)) e[a] = d.info; g++ } else { b = c; Global.MsgBox.cont(a, d.info); Global.MsgBox.show(a, { currentElem: d.target, replaceBg: true }) } if (g == c) h && h() }) } }, submit: function (a, c) { var d = a.Format, b = a.DataAssembly.Post; Global.MsgBox.checking(c, d, b, function () { a.postAjax(b) }) } }, Boxy: { handleSetting: { newTitle: "", dlStyle: "", dtHtml: "", dtStyle: "", ddStyle: "", newMessage: "", ddItemIcon: true, ddScrollBar: false, ddScrollHeight: "", clickEvent: { handleType: "", oK: function () { }, cancel: function () { } }, boxyContent: "", boxyOptions: { afterShow: function () { }, afterHide: function () { }, beforeShow: function () { }, beforeHide: function () { } }, triggerBtn: 0, isIFrame: false }, handleIFrame: { src: "", actionName: "", controllerName: "", urlParameter: "", htmlattributes: {} }, boxyData: {}, triggerBtn: {}, init: function (b, e) { var a = jQuery.extend({}, this.handleSetting, e || {}); this.beginHide(b, a); this.lockBtn(b, a); var d = jQuery.extend({}, { show: false, modal: true }, a.boxyOptions || {}); this.boxyData[b] = this.boxyData[b] || new Boxy(a.boxyContent || null, d); var c = this.boxyData[b]; c.options = null; c.options = jQuery.extend({}, Boxy.DEFAULTS, d || {}); c.handleSetting = a; return c }, "get": function (a) { typeof this.boxyData[a] == "undefined" && this.init(a, null); return this.boxyData[a] }, lockBtn: function (c, b) { var a = b.triggerBtn; if (a) { this.triggerBtn[c] = a; Global.Object.htmlElemFocus(a) } Global.Object.Tag.disabled(a) }, unLockBtn: function (a) { Global.Object.Tag.enabled(this.triggerBtn[a]) }, getDDClass: function (a) { return "over-hidden " + (a ? "itemIcon" : "itemInfo") }, message: function (a, b, c) { if (Global.Object.isObject(a)) { var g = a.newContent || "请填写空消息", f = a.htmlattributes, h = Global.HTML.a(g, f); return Global.HTML.dd(h, { "class": this.getDDClass(b), style: c || "" }) } else if (Global.Object.isArray(a)) { for (var e = "", d = 0; d < a.length; d++) e += Global.Boxy.message(a[d], b, c); return e } else return Global.Object.isString(a) ? Global.HTML.dd(a, { "class": this.getDDClass(b), style: c || "" }) : Global.Object.isNumber(a) ? Global.HTML.dd(a, { "class": this.getDDClass(b), style: c || "" }) : "" }, cont: function (e, j, m) { e = e || Global.Guid.get(); var g = this.init(e, m), c = g.handleSetting; c.clickEvent.handleType = j; var a = c.newTitle, i = true; if (c.isIFrame) { a = a || "无标题"; g.setContent(c.newMessage) } else { var l = "", b = c.dtHtml, h = Global.Boxy.message(c.newMessage, c.ddItemIcon, c.ddStyle), k = c.dlStyle || "width:360px;", d = c.dtStyle || "", f = ""; switch (j) { case "wait": a = "正在" + (a || "提交") + "中..."; b = "正在" + (b || "提交数据") + "，请稍等..."; d = d || "padding: 50px 0;"; i = false; break; case "failure": a = a || "提交失败"; b = (b || "提交失败") + "，请查看以下原因,更改后再提交."; d = d || "padding-top: 21px;"; f = this.closeBtn(e); break; case "success": a = a || "提交成功"; b = b || "您已提交成功！"; d = d || "padding: 40px 0 19px 0;"; f = this.oKBtn(e); break; case "error": a = a || "异常错误"; b = b || "对不起，出现异常错误，异常信息为："; f = this.closeBtn(e); break; case "alert": a = a || "提示消息"; b = b || "无消息"; d = d || "padding:25px 0px 25px 0;"; f = this.oKBtn(e); break; case "confirm": a = a || "确认消息"; b = b || "您确定吗?"; d = d || "padding:30px 0px 28px 0;"; f += this.oKBtn(e); f += this.cancelBtn(e); break; case "progress": a = a || "进度条"; k = "width:400px; height:150px;"; d = "padding:20px 0px 15px 0;"; i = false } b = Global.HTML.dt(b, { "class": "auto-break", style: d }); if (c.ddScrollBar) { var n = c.ddScrollHeight || "150px", o = Global.HTML.div(h, { style: "overflow-x:auto;border:solid 1px #ccc; padding:5px; height:" + n }); h = o } h += Global.HTML.dd(f, { "class": "itemBtn" }); l = Global.HTML.dl(b + h, { style: k }); g.setContent(l) } g.setTitle(a); g.setCloseVis(i); g.show() }, Topics: { Admin: { department: function (b) { var a = Global.Environment.get部门名称(); return Global.HTML.b(a, null) + Global.HTML.highlight(b, null) }, user: function (c, b) { var a = Global.Environment.get角色名称(c); return Global.HTML.b(a, null) + "账户" + Global.HTML.highlight(b, null) } }, Examiner: { organization: function (a, b) { return Global.HTML.b(a == 0 ? "练习" : "考试", null) + Global.HTML.highlight(b, null) }, binding: function (a, b) { return Global.HTML.b(a == 0 ? "新" : "爱考网", null) + "账号" + Global.HTML.highlight(b, null) }, share: function (a, b) { return Global.HTML.b(a, null) + Global.HTML.highlight(b, null) }, subject: function (a) { return Global.HTML.b(a, null) + Global.HTML.highlight("试题", null) }, test: function (a) { return Global.HTML.b(a, null) + Global.HTML.highlight("试卷", null) }, examResult: function (a) { return Global.HTML.b(a ? "公布" : "关闭", null) + Global.HTML.highlight("考试结果", null) }, Subject: { del: function (a) { return Global.HTML.b("试题", null) + Global.HTML.highlight("'" + a + "'", null) } }, Test: { del: function (a) { return Global.HTML.b("试卷", null) + Global.HTML.highlight("'" + a + "'", null) } }} }, setTitle: function (b, a) { this.get(b).setTitle(a) }, getDL: function (a) { return this.get(a).getContent().children("dl") }, getDL_DT: function (a) { return this.getDL(a).children("dt") }, getDL_DD: function (b, a) { return this.getDL(b).children("dd").eq(a || 0) }, setDL_Dt: function (b, a) { this.getDL_DT(b).html(a) }, setDL_DD: function (c, b, a) { this.getDL_DD(c, b).html(a) }, show: function (a) { this.get(a).show() }, hide: function (a) { this.get(a).hide() }, beginHide: function (c, a) { var b = this; a.boxyOptions.beginHide = function () { b.unLockBtn(c) } }, setCloseVis: function (b, a) { this.get(b).setCloseVis(a) }, Parent: { "get": function (a) { return parent && parent.Global ? parent.Global.Boxy.get(a) : new Boxy(null, null) }, hide: function (a) { $("div.boxy-modal-blackout").hide(); this.get(a).hide() } }, btnClick: function (e, c) { var a = this.get(e).handleSetting; if (a instanceof Object) { var b = a.clickEvent || {}, d = c ? b.oK : b.cancel; d instanceof Function && d() } if (c && a.clickEvent.handleType == "confirm") return; Global.Boxy.hide(e) }, btn: function (e, c, a) { var b = { "class": "sBtn", title: a.title, onclick: "Global.Boxy.btnClick('" + e + "', " + c + ");" }, d = Global.HTML[a.className](a.value, b); return d }, oKBtn: function (a) { return this.btn(a, true, { className: "btn1", title: "确定", value: "确定" }) }, cancelBtn: function (a) { return this.btn(a, false, { className: "btn2", title: "取消", value: "取消" }) }, closeBtn: function (a) { return this.btn(a, false, { className: "btn2", title: "关闭窗口,快捷键Esc", value: "关闭" }) }, wait: function (b, a) { this.cont(b, "wait", a) }, failure: function (b, a) { this.cont(b, "failure", a) }, error: function (b, a) { this.cont(b, "error", a) }, success: function (b, a) { this.cont(b, "success", a) }, alert: function (b, a) { this.cont(b, "alert", a) }, confirm: function (b, a) { this.cont(b, "confirm", a) }, progress: function (b, a) { this.cont(b, "progress", a) }, iFrame: function (d, a, b) { var c; a = jQuery.extend({}, this.handleIFrame, a); b = b || {}; b.isIFrame = true; if (a.src) c = Global.HTML.iframe_1(a.src, a.htmlattributes); else if (a.controllerName) c = Global.HTML.iframe_3(a.actionName, a.controllerName, a.urlParameter, a.htmlattributes); else if (a.actionName) c = Global.HTML.iframe_2(a.actionName, a.urlParameter, a.htmlattributes); else c = Global.HTML.iframe_0(a.htmlattributes); b.newMessage = c; this.cont(d, "iframe", b) } }, BlockUI: { HandleSetting: { Element: { WaitOptions: { targetElem: 0, 数据类型: "正在获取", 标题位数: "16位"} }, BlockOptions: { message: "", css: { backgroundColor: "#fff", cursor: "auto", width: "auto" }, overlayCSS: { backgroundColor: "#ccc", opacity: "0.5", cursor: "auto"}} }, DataAssembly: { WaitType: { 获取: "正在获取", 更新: "正在更新", 提交: "正在提交", 查询: "正在查询", 标题16位: "16位", 标题32位: "32位" }, WaitSimilar: { 正在获取: "正在获取数据，请稍候...", 正在更新: "正在更新数据，请稍候...", 正在提交: "正在提交数据，请稍候...", 正在查询: "正在查询中，请稍候...", 标题16位: '<h2 style="font-size:15px;padding:10px 25px;">{0}{1}</h2>', 标题32位: '<h2 style="font-size:20px;padding:20px 45px;">{0}{1}</h2>', 图片Style: "vertical-align:middle;padding-right: 10px;", 图片16位: '<img src="/Content/Images/Base/loading-16.gif" style="{0}" width="16" height="16"/>', 图片32位: '<img src="/Content/Images/Base/loading-32.gif" style="{0}" width="32" height="32"/>'} }, Init: { block: function (a, b) { a = $(a); Global.Object.isFunction(a.block) && a.block(b) } }, Element: { wait: function (h, g) { var e = Global.BlockUI.HandleSetting, a = Global.BlockUI.DataAssembly, b = jQuery.extend({}, e.Element.WaitOptions, h || {}), i = b.targetElem, l = b.数据类型, f = b.标题位数, d = jQuery.extend({}, e.BlockOptions, g || {}), j = a.WaitSimilar["标题" + f] || "{0}-无标题-{1}", c = a.WaitSimilar["图片" + f] || "无图片", k = a.WaitSimilar[l] || "无数据"; c = c.format(a.WaitSimilar.图片Style); d.message = j.format(c, k); Global.BlockUI.Init.block(i, d) }, unwait: function (a) { a = a || {}; a.targetElem = a.targetElem || 0; $(a.targetElem).unblock() }, wait16: function (a, b) { a = a || {}; a.标题位数 = "16位"; this.wait(a, b) }, wait32: function (a, b) { a = a || {}; a.标题位数 = "32位"; this.wait(a, b) } }, Page: {} }, MvcPager: { Ajax: { CallBackSetting: { waitType: "正在获取", self: 0 }, blockID: "Master_Main_Content", beforeSend: function (b) { b = b || this.CallBackSetting; var a = b.self; if (a) { a = $(a); var d = a.attr("href"), c = Global.MvcPager.Search.fullPath(d); a.attr("href", c) } Global.BlockUI.Element.wait32({ targetElem: $("#" + Global.MvcPager.Ajax.blockID), 数据类型: b.waitType || "正在获取" }, {}) }, complete: function () { window.setTimeout(function () { try { $("#" + Global.MvcPager.Ajax.blockID).unblock() } catch (a) { alert(a) } }, 200) }, post: function (d, c, b) { var a = jQuery.extend({}, this.CallBackSetting, b || {}); Global.MvcPager.Ajax.beforeSend(a); $.ajax({ type: "post", url: d, data: c, success: function (a) { setTimeout(function () { $("#MvcPagerAjaxRenderPartial").html(a); Global.MvcPager.Ajax.complete() }, 600) } }) }, update: function (d) { var a = parseInt($("#MvcPagerLink span.currentPagerItem").attr("pageIndex") || 1), g = parseInt($("#MvcPagerDataInfo").attr("totalPageCount")), e = parseInt($("#MvcPagerDataInfo").attr("totalItemCount")); if (e - (a - 1) * 10 == 1) a = a < 2 ? 1 : a - 1; var c = Global.URL.routes(), f = "/" + c.controller + "/" + c.action + "/" + a + location.search, b = null; if (Global.MvcPager.Search.isAjax) b = Global.MvcPager.Search.DataAssembly.Post; this.post(f, b, d) } }, Search: { isAjax: false, initData: function () { this.isAjax = true; var a = this.ElemAssembly.Post; a.KeyWords = $("#KeyWordsInputID"); a.DepartmentID = $("#DepartmentID"); a.DDStaticValItem = $("#DDStaticValItem") }, appendData: function () { this.initData(); var b = this.ElemAssembly.Post, a = this.DataAssembly.Post; a.KeyWords = b.KeyWords.val() || ""; a.DepartmentID = b.DepartmentID.val() || ""; a.DDStaticValItem = b.DDStaticValItem.val() || "0" }, resetData: function () { this.initData(); var b = this.ElemAssembly.Post, a = this.DataAssembly.Post; b.KeyWords.val("").blur(); b.DepartmentID.val(""); b.DDStaticValItem.val("0"); a.KeyWords = ""; a.DepartmentID = ""; a.DDStaticValItem = "0" }, ElemAssembly: { Post: { KeyWords: 0, DepartmentID: 0, DDStaticValItem: 0 }, Other: {} }, DataAssembly: { Post: { KeyWords: "", DepartmentID: "", DDStaticValItem: "" }, Backup: {} }, Input: { ElemAssembly: { input: 0, label: 0 }, initHtmlElem: function (a, b) { this.ElemAssembly.input = $("#" + a); this.ElemAssembly.label = $("#" + b) }, tab: function (c) { var a = this.ElemAssembly.input, b = this.ElemAssembly.label, d = a.val(); switch (c) { case 0: case 2: b.css("display", "none"); break; case 1: this.position() } }, position: function () { var c = this.ElemAssembly.input, b = this.ElemAssembly.label, a = c.position(), d = a.left + 5, e = a.top + 1; b.css({ left: d, top: e }); if (c.val() == "" && a.left != 0) b.css("display", "inline"); else b.css("display", "none") }, enterEvent: function (b) { var a; if (window.event) a = b.keyCode; else if (b.which) a = b.which; a == 13 && Global.MvcPager.Search.submit() } }, fullPath: function (a) { a = a || location.href; if (a.indexOf("?") == -1) a += "?"; var b, d = Global.MvcPager.Search.DataAssembly.Post; for (var c in d) { b = RegExp(c + "=&"); if (b.test(a)) a = a.replace(b, ""); b = RegExp(c + "=$"); if (b.test(a)) a = a.replace(b, ""); b = RegExp("&$"); if (!b.test(a)) a += "&"; if (d[c] && a.indexOf(c + "=") == -1) a += c + "=" + encodeURI(d[c]) } return a.replace(/(&|\?)$/, "") }, submit: function () { this.appendData(); Global.MvcPager.Ajax.post(location.href, this.DataAssembly.Post, { waitType: "正在查询" }) }, retreat: function () { this.resetData(); Global.MvcPager.Ajax.post(location.href, this.DataAssembly.Post, { waitType: "正在查询" }) } }, CheckBox: { selectedTR: function (a, b) { if (b) a.addClass("selected"); else a.removeClass("selected") }, getTR: function () { return $("#MvcPagerDataList").children("tbody").children("tr[type=MvcTB]") }, getCheckBox: function (a) { return $(a).children("label").children("td:eq(0)").children("input[type=checkbox]") }, radioSelect: function (a) { var b = $(a).parent("td").parent("label").parent("tr"); this.selectedTR(b, a.checked); this.setAll() }, isAllSelect: function () { var a = true; this.getTR().each(function () { if (Global.MvcPager.CheckBox.getCheckBox(this).attr("checked") == false) { a = false; return false } }); return a }, setAll: function () { if (this.isAllSelect()) $("#全选").attr("checked", "checked"); else $("#全选").removeAttr("checked") }, allSelect: function (a) { this.getTR().each(function () { var b = Global.MvcPager.CheckBox.getCheckBox(this); if (!b.attr("disabled")) { if (a) b.attr("checked", "checked"); else b.removeAttr("checked"); Global.MvcPager.CheckBox.selectedTR($(this), a) } }) }, reverseSelect: function () { var a; this.getTR().each(function () { a = Global.MvcPager.CheckBox.getCheckBox(this); if (a.attr("checked") == false) a.attr("checked", "checked"); else a.removeAttr("checked") }) } } }, TabSwitch: { target: function (b) { b = $(b); var e = b.parent("ul.tabSwitch"), a = b.index(), d = e.children("li.tabMenu"), f = a == 0 ? "first-on" : a == d.length - 1 ? "end-on" : "middle-on"; d.removeClass("first-on middle-on end-on"); d.eq(a).addClass(f); var g = e.next("div.tagCollection"), c = g.children("div.tabMsg"); if (c.eq(a).css("display") == "none") { c.css("display", "none"); c.eq(a).fadeIn("fast") } }, getTab: function (b) { var a = $("ul.tabSwitch").children("li.tabMenu"); return a.eq(b || 0) }, Trigger: { handle: function (b, a) { a && Global.Object.isFunction(Global.TabSwitch.getTab(b)[a]) && Global.TabSwitch.getTab(b)[a]() }, click: function (a) { this.handle(a, "click") } }, Text: { "get": function (a) { return Global.TabSwitch.getTab(a).text().trim() }, "set": function (b, a) { Global.TabSwitch.getTab(b).text(a) }, append: function (b, a) { Global.TabSwitch.getTab(b).append(a) } }, Html: { "get": function (a) { return Global.TabSwitch.getTab(a).html() }, "set": function (b, a) { Global.TabSwitch.getTab(b).html(a) }, append: function (b, a) { Global.TabSwitch.getTab(b).append(a) } } }, AjaxServer: { Post: { json: function (c, b, a) { $.post(c, b, function (b) { a && a(b) }, "json") } }} }